#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: Interesting Things
#+OPTIONS: num:nil H:2


* Practice to clever
+ http://smarterer.com/
* plop
http://code.google.com/p/plop/

http://code.google.com/p/moses/

http://googleresearch.blogspot.hk/2008/11/plop-probabilistic-learning-of-programs.html

* idea
http://wiki.opencog.org/w/Ideas

http://wiki.opencog.org/w/Meta-Optimizing_Semantic_Evolutionary_Search

https://github.com/opencog
* 写编译器[fn:1]
** Tutorial
+ [[http://staff.polito.it/silvano.rivoira/HowToWriteYourOwnCompiler.htm][How to write your own compiler]]
  It describes the project of a complete compiler for a real
  programming language and is organized to demonstrate how to
  incrementally design and implement the successive phases of the
  compilation process.

+ [[http://www.arsmathematica.net/archives/2006/10/18/hey-kids-lets-write-a-compiler-today/][Hey Kids, Let’s Write a Compiler Today]]
  t’s literally a short tutorial on how to write a compiler. It
  concentrates on the least-complicated but most-intimidating phase:
  machine code generation.
+ [[http://compilers.iecc.com/crenshaw/][Let's Build a Compiler]]
  This fifteen-part series, written from 1988 to 1995, is a
  non-technical introduction to compiler construction.
+ [[http://class2go.stanford.edu/CS143/Spring2013][Stanford University Computer Science 143 — Compilers]]

+ [[http://www.cs.uiuc.edu/class/cs426/][UIUC CS 426]]

+ [[http://gnuu.org/2009/09/18/writing-your-own-toy-compiler/][Writing Your Own Toy Compiler Using Flex, Bison and LLVM]]
  The tools we’ll be using are C/C++ based. LLVM is specifically C++
  and our toy language will follow suit since there are some niceties
  of OOP and the STL (C++’s stdlib) that make for fewer lines of
  code. In addition to C, both Lex and Bison have their own syntax
  which may seem daunting at first, but I’ll try to explain as much
  as possible. The grammar we’re dealing with is actually very tiny
  (~100 LOC), so it should be feasible.

** More
http://www.lingcc.com/2009/12/22/10404/

** Books
http://www.lingcc.com/2012/05/16/12048/

** Groups
+ http://groups.google.com/group/comp.compilers?hl=en
+ http://compilers.iecc.com/index.phtml

* a functional programming language and interpreter written in GNU Bash 4
https://github.com/alandipert/gherkin

* Blog
+ https://www.progville.com/
* Footnotes

[fn:1] http://www.lingcc.com/2009/12/22/10404/
 
