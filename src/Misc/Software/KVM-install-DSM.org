#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: KVM和KVM安装黑群晖
#+OPTIONS: num:nil H:2


* Overview
KVM是基于硬件的完全虚拟化，其虚拟化需要硬件支持（如Intel VT技术或者
AMD-V技术)。

少量机器的管理，发行版+Kvm，使用libvirtd管理，virt-manager远程管理，
lvm做存储后端，是最简单、可控性最高、性能也较好的方案。

首先检查自己的机器是否支持VT,
#+begin_src sh
egrep -o '(vmx|svm)' /proc/cpuinfo
#+end_src

http://jksoftcn.com/category/linux.html


http://forum.ubuntu.org.cn/viewtopic.php?t=154792
https://www.cyberciti.biz/faq/installing-kvm-on-ubuntu-16-04-lts-server/

https://www.centos.org/docs/5/html/5.2/Virtualization/chap-Virtualization-Managing_guests_with_virsh.html
https://help.ubuntu.com/community/KVM/Virsh
https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/5/html/Virtualization/chap-Virtualization-Managing_guests_with_virsh.html

https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Virtualization_Deployment_and_Administration_Guide/sect-Guest_virtual_machine_installation_overview-Creating_guests_with_virt_install.html
http://www.ibm.com/support/knowledgecenter/en/linuxonibm/liaai.kvminstall/liaaikvminstallvirtinstall.htm



* install
#+begin_src sh
sudo apt-get install qemu-kvm libvirt-bin bridge-utils \
virtinst
# virt-manager: GUI管理窗口
# bridge-utils:用于网络桥接
# virtinst: support virt-install
#+end_src

#+begin_src sh
  # 验证KVM内核是否加载成功：
     lsmod | grep kvm
  # 证实KVM正常运行
     virsh -c qemu:///system list
  # 如果提示你没权限操作，则需要将当前操作账户添加进libvirtd组，命令为：
     sudo usermod -G libvirtd -a username
#+end_src

安装完后默认会生成一个网桥virbr0, 这里自己创建一个NAT的网桥br0

=/etc/network/interfaces=
#+begin_src sh
auto br0
iface br0 inet dhcp
        bridge_ports eth0
        bridge_stp off
        bridge_fd 0
        bridge_maxwait 0

EOF
#+end_src

或者手动临时测试配置:
#+begin_src sh
$ sudo ifconfig eth0 0.0.0.0 up
$ sudo brctl addbr br0
$ sudo brctl addif br0 eth0
$ sudo dhclient br0
#+end_src

* Configure and install DSM
如果安装 =virt-manager= 直接启动 =virt-manager= 来GUI操作KVM.

The KVM hypervisor supports qcow2. qcow2 images support compression,
snapshots and a few other nice things like growing on demand (thin
provisioning, sparse file) and a read only base image. There was a
performance overhead but nowdays that is almost negligent. To create
an 10GB qcow2 image:

#+begin_src sh
qemu-img create -f qcow2 ./dsm.qcow2 10G
#+end_src

#+begin_src sh
virt-install \
--name DSM \
--ram 1024 \
--disk path=./dsm.qcow2,format=qcow2 \
--os-type linux \
--network bridge=br0,mac=00:11:22:33:44:55 \
--graphics vnc,port=5999 \
--console pty,target_type=serial \
--cdrom ./XPEnoboot_DS3615xs_5.2-5967.1.iso
#+end_src

从 https://www.synology.com/en-us/support/download/DS3615xs 下载
Synology Assistant. 或者 http://find.synology.com/ .

#+begin_src sh
# stop
virsh destroy DSM
# start
virsh start DSM
#+end_src

如果迟迟没有看到新设备，可以用vnc客户端连接host的5999端口，查看虚拟机
的屏幕。

* More
** =virt-install= examples[fn:1]
*Debian 8*
#+begin_src sh
virt-install \
--name debian8 \
--ram 1024 \
--disk path=./debian8.qcow2,size=8 \
--vcpus 1 \
--os-type linux \
--os-variant generic \
--network bridge=virbr0 \
--graphics none \
--console pty,target_type=serial \
--location 'http://ftp.nl.debian.org/debian/dists/jessie/main/installer-amd64/' \
--extra-args 'console=ttyS0,115200n8 serial'
#+end_src

*CentOS 7*
#+begin_src sh
virt-install \
--name centos7 \
--ram 1024 \
--disk path=./centos7.qcow2,size=8 \
--vcpus 1 \
--os-type linux \
--os-variant centos7 \
--network bridge=virbr0 \
--graphics none \
--console pty,target_type=serial \
--location 'http://mirror.i3d.net/pub/centos/7/os/x86_64/' \
--extra-args 'console=ttyS0,115200n8 serial'
#+end_src

*Ubuntu 14.04*
#+begin_src sh
virt-install \
--name ubuntu1404 \
--ram 1024 \
--disk path=./ubuntu1404.qcow2,size=8 \
--vcpus 1 \
--os-type linux \
--os-variant generic \
--network bridge=virbr0 \
--graphics none \
--console pty,target_type=serial \
--location 'http://archive.ubuntu.com/ubuntu/dists/trusty/main/installer-amd64/' \
--extra-args 'console=ttyS0,115200n8 serial'
#+end_src

*OpenSUSE 13*
#+begin_src sh
virt-install \
--name opensuse13 \
--ram 1024 \
--disk path=./opensuse13.qcow2,size=8 \
--vcpus 1 \
--os-type linux \
--os-variant generic \
--network bridge=virbr0 \
--graphics none \
--console pty,target_type=serial \
--location 'http://download.opensuse.org/distribution/13.2/repo/oss/' \
--extra-args 'console=ttyS0,115200n8 serial'
#+end_src

*Generic ISO*
Download an ISO file and give the filename to the ~--cdrom=~ parameter.
This is used instead of ~--location~. A VNC console is available on
localhost, port =5999= for you to use.

#+begin_src sh
virt-install \
--name freebsd10 \
--ram 1024 \
--disk path=./freebsd10.qcow2,size=8 \
--vcpus 1 \
--os-type generic \
--os-variant generic \
--network bridge=virbr0 \
--graphics vnc,port=5999 \
--console pty,target_type=serial \
--cdrom ./FreeBSD-10.1-RELEASE-amd64-dvd1.iso \
#+end_src
** os-variant
You can get a list of supported operating system variants with the
=osinfo-query os= command
#+begin_src sh
sudo apt-get install libosinfo-bin
#+end_src

#+begin_src sh
$ osinfo-query os
 Short ID             | Name                                               | Version  | ID                                      
----------------------+----------------------------------------------------+----------+-----------------------------------------
 altlinux1.0          | Mandrake RE Spring 2001                            | 1.0      | http://altlinux.org/altlinux/1.0        
 altlinux2.0          | ALT Linux 2.0                                      | 2.0      | http://altlinux.org/altlinux/2.0        
 altlinux2.2          | ALT Linux 2.2                                      | 2.2      | http://altlinux.org/altlinux/2.2        
 altlinux2.4          | ALT Linux 2.4                                      | 2.4      | http://altlinux.org/altlinux/2.4        
 altlinux3.0          | ALT Linux 3.0                                      | 3.0      | http://altlinux.org/altlinux/3.0        
 altlinux4.0          | ALT Linux 4.0                                      | 4.0      | http://altlinux.org/altlinux/4.0        
 altlinux4.1          | ALT Linux 4.1                                      | 4.1      | http://altlinux.org/altlinux/4.1        
....
#+end_src
** start, stop and remove VM
#+begin_src sh
$ virsh start centos7
$ virsh list --all
# To stop a VM, you give the (unintuitive) command
$ virsh destroy centos7
#  remove the VM from the virsh list
$ virsh undefine centos7
#+end_src
** misc
#+begin_src sh
sudo virsh dumpxml centos7 > ./centos7.xml
#+end_src
** todo

#+begin_src sh

#+end_src

#+begin_src sh

#+end_src

* cc

#+begin_src sh

#+end_src

* Footnotes

[fn:1] https://raymii.org/s/articles/virt-install_introduction_and_copy_paste_distro_install_commands.html

