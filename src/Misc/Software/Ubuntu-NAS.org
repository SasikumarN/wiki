#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: Configure Ubuntu to the NAS
#+OPTIONS: num:nil H:2

* 系统配置
1. IP修改成固定IP，域名解析修改为本地路由器。 /etc/network ,
   /etc/resolvconf
2. apt源修改为本地镜像，修正extras源的no-pubkey的错误。 /etc/apt
3. 双网卡: 修改网络配置为双网卡绑定，mode 6。/etc/modules, modprobe
   bonding, /etc/network

** 基础服务
+ openssh-server：SSH服务
+ iotop：监控硬盘IO
+ lm-sensors：CPU温度监控
+ hddtemp：硬盘温度监控
+ exfat-fuse：挂载exfat分区
+ trash-cli：替代rm命令，安全第一
+ screen
+ LAMP: sudo tasksel
+ hdparm: linux下硬盘休眠通过hdparm的-B参数设定硬盘的advanced power
  managemant值。0-127之间是允许休眠，128-254之间是不休眠，值越大相对功
  耗就越大，但性能高。原来的相当于设定在254，所以硬盘一直在全速转，导
  致温度长期居高不下。有鉴于此，将此值设定为127，为了重启后有效，还需
  修改 =/etc/hdparm.conf= 配置文件。
+ aria2：最好的HTTP下载
+ forked-daapd：iTunes媒体共享
+ webmin: 网页管理系统

** XBMC
+ xinit xorg alsa-utils pulseaudio：X Server，未来可以用wayland了
+ xbmc xbmc-standalone：XBMC
+ upower acpi-support：XBMC的关机支持

* 数据盘
1. 挂载数据盘LVM文件系统。 VMware RDM, lvm, rescan scsi, /etc/fstab
2. vmtools安装。 apt-get install open-vm-tools
3. 数据冗余/容错：
   + 安装LVM，使用LVM RAID1，制作镜像，LVM技术成熟，基本不会丢数据。
   + 或者安装ZFS，使用ZFS制作ZRAID1/RAID5等数据冗余，相较于LVM，ZFS管
     理较为方便（只需要两条命令），但是对内存开销较大.另外值得注意的是，
     由于OS DataBlock大小的关系，在创建ZPool的时候，记得加上 -o
     ashift=12 参数，以大幅提升ZFS的性能。
     #+begin_src sh
       sudo add-apt-repository ppa:zfs-native/stable
       sudo aptitude update
       sudo aptitude install ubuntu-zfs
     #+end_src
** btrfs file system[TODO]
Test.

* SAMBA[fn:1]
#+begin_src sh
$ sudo apt-get update
$ sudo apt-get install samba
#+end_src

** 创建一个 Anonymous share
#+begin_src c++
sudo vi /etc/samba/smb.conf
#+end_src
在文件末尾添加如下内容:
#+begin_src sh
[share] 
    comment = Ubuntu File Server 
    path = /srv/samba/share 
    browsable = yes 
    guest ok = yes 
    read only = no
#+end_src
创建 share 目录,对该目录的Others权限添加w
#+begin_src sh
$ sudo mkdir -p /srv/samba/share
$ sudo chmod o+w /srv/samba/share
#+end_src
重启Samba服务使配置生效
#+begin_src sh
$ sudo restart smbd
$ sudo restart nmbd
#+end_src

Samba服务器配置完成，现在，可以在Windows Explorer 的地址栏中输入Samba
服务器所在主机的主机名:
#+begin_src sh
\\hostname
or
\\IP
#+end_src
** 创建一个 Secured share
#+begin_src sh
$ mkdir -p /srv/samba/secret
#+end_src

创建一个用于访问这个 secured share 的用户，下面创建一个名为sambauser1
的用户, 将用户 sambauser1 加入到本地的 smbpasswd file:

#+begin_src sh
$ sudo useradd sambauser1 -s /usr/sbin/nologin
$ sudo smbpasswd -a sambauser1
#+end_src

修改共享目录的User为sambauser1
#+begin_src sh
$ sudo chown sambauser1:sambauser1 /srv/samba/secret
#+end_src

修改 Samba 配置文件
#+begin_src sh
sudo vi /etc/samba/smb.conf 

[secret]
    comment = Secret File
    path = /srv/samba/secret
    valid user = sambauser1
    guest ok = no
    writable = yes
    browsable = yes
#+end_src

#+begin_src sh
$ sudo restart smbd
$ sudo restart nmbd
#+end_src
* bt: rtorrent + rutorrent[fn:3][fn:4]
替代transmission-daemon(http://localhost:9091/transmission/web/) BT/PT
下载. 这里以nginx测试

** nginx + php
#+begin_src sh
sudo apt-get install nginx
sudo service nginx start
sudo apt-get install  php5-fpm php5-cli php5-gd php5-xdebug php-apc
sudo service php5-fpm start
#+end_src
** rtorrent
#+begin_src sh
sudo apt-get install rtorrent
#+end_src

*** create rTorrent Configuration from [[https://github.com/rakshasa/rtorrent/wiki/CONFIG-Template][rTorrent Configuration Template]]
#+begin_src sh
basedir="$HOME/rtorrent"
mkdir -p "$basedir"/{.session,download,log,watch/load,watch/start}

curl -s https://raw.githubusercontent.com/wiki/rakshasa/rtorrent/CONFIG-Template.md \
    | grep -A9999 '^######' | grep -B9999 '^### END' >~/.rtorrent.rc
#+end_src

*** rtorrent xmlrpc-c 配置为rutorrent连接
xmlrpc-c 配置可参见官方文档《Using XMLRPC with rtorrent》本文以Nginx为
例来说明。

#+begin_src sh
cat >>~/.rtorrent.rc<<EOF
execute_nothrow=rm,/tmp/rpc.socket
scgi_local = /tmp/rpc.socket
schedule = chmod,0,0,"execute=chmod,777,/tmp/rpc.socket"
EOF
#+end_src
最后的基本配置为: [[./Files/rtorrent.rc][.rtorrent.rc]]

*** rtorrent 运行方法
**** method1
下载此脚本 [[./Files/rtorrent.sh]]
#+begin_src sh
mv rtorrent.sh /etc/init.d/rtorrent
chmod a+x /etc/init.d/rtorrent
#+end_src
**** method2
通过Screen使用rTorrent，然后通过+A+D挂起、screen -r 恢复
**** method3
直接在终端运行，然后通过+Q 退出
#+begin_src sh
/usr/bin/rtorrent
#+end_src

** rutorrent
安装配置ruTorrent需保证，支持php和xmlrpc-c的Web环境已经配置好，否则出
错。

*** Nginx配置
#+begin_src sh
sudo mkdir /var/www
sudo chown www-data:www-data /var/www
#+end_src

Add user to ww-data group:
#+begin_src sh
sudo usermod -a -G www-data USERNAME
#+end_src

修改nginx配置文件 =/etc/nginx/sites-available/default=
#+begin_src sh
  root /var/www;
  index index.php index.html index.htm;

          location ~ \.php$ {
                  fastcgi_split_path_info ^(.+\.php)(/.+)$;
                  fastcgi_pass unix:/var/run/php5-fpm.sock;
                  fastcgi_index index.php;
                  include fastcgi_params;
          }
#+end_src

在server字段加入下面内容。
#+begin_src sh
location /RPC2 {
    include scgi_params;
    #scgi_pass 127.0.0.1:5000;
    scgi_pass unix:///tmp/rpc.socket;
}
#+end_src
*** rutorrent安装
#+begin_src sh
#需要的一些依赖包:
sudo add-apt-repository ppa:mc3man/trusty-media
sudo apt-get update
sudo apt-get install ffmpeg mediainfo curl


wget http://dl.bintray.com/novik65/generic/rutorrent-3.6.tar.gz
wget http://dl.bintray.com/novik65/generic/plugins-3.6.tar.gz
sudo tar xvf rutorrent-3.6.tar.gz -C /var/www
sudo tar xvf plugins-3.6.tar.gz -C /var/www/rutorrent
sudo chown www-data:www-data -R /var/www/rutorrent

sed -i 's/\/\/ $scgi/$scgi/g' /var/www/rutorrent/conf/config.php
sed -i 's/$scgi_port = 5000/\/\/ $scgi_port = 5000/g' /var/www/rutorrent/conf/config.php
sed -i 's/$scgi_host = "127/\/\/ $scgi_host = "127/g' /var/www/rutorrent/conf/config.php
# change below lines
"curl" ==> '/usr/bin/curl', // Something like /usr/bin/curl. If empty, will be found in PATH.
"stat" ==> '/usr/bin/stat', // Something like /usr/bin/stat. If empty, will be found in PATH.
#+end_src
*** ruTorrent 访问密码保护
#+begin_src sh
sudo apt-get install apache2-utils
sudo htpasswd -b -c /var/www/rutorrent/.htpasswd USERNAME PASSWD
sudo chown www-data:www-data /var/www/rutorrent/.htpasswd
#+end_src

修改 nginx 配置文件 =/etc/nginx/sites-available/default=,
在server字段加入下面内容。
#+begin_src sh
location /rtorrent {
    auth_basic "ruTorrent login";
    auth_basic_user_file /var/www/rtorrent/.htpasswds;
}
#+end_src

最后nginx的default文件: [[./Files/nginx_default][default]]

#+begin_src sh
sudo service nginx start
sudo service php5-fpm start
# 访问
http://localhost/rutorrent/
#+end_src

** 一键安装rtorrent+rutorrent+Web
#+begin_src sh
  wget –no-check-certificate -O autodl-setup http://sourceforge.net/projects/autodl-irssi/files/autodl-setup/download
  sudo sh autodl-setup
#+end_src
在安装的过程中一般直接按回车采用默认方式就可以了。 安装到一定程度会提
示 你输入rut的用户名 和密码，请填写一个本机存在的用户名称，这里可以添
加多用户，如果不需要，在添加一个完毕之后添加下一个的时候按回车跳过，否
则会无限循环（或者使用useradd命令添加一个新用户，如果添加新用户，请在
安装之前）

最后还会提示输入webmin的用户名和密码，注意不要和rut的混淆。 然后，然后
么在浏览器中输入 ip/rutorrent 就可以开始使用了，就是这么简单。

* NFS服务器
服务器端:
#+begin_src sh
sudo apt-get install nfs-kernel-server
#+end_src
/etc/exports

客户端:
#+begin_src sh
sudo apt-get install nfs-common
#+end_src
修改 /etc/fstab 自动挂载分区:

#+begin_src sh
  example.hostname.com:/ubuntu /local/ubuntu nfs rsize=8192,wsize=8192,timeo=14,intr
#+end_src

* DLNA服务器
use minidlna
#+begin_src sh
sudo apt-get install minidlna
sudo service minidlna restart
#+end_src
=/etc/minidlna.conf=
#+begin_src sh
friendly_name=MediaCentre	代表在別的設備上要看到的名稱
inotify=yes	把前面 #號去掉，代表 inode一旦有改變，就會更改到資料庫上。
#+end_src

* BitTorrent Sync （闭源软件）

下载Linux版，解压缩即可执行，修改/etc/rc.local实现开机执行:
https://www.resilio.com/individuals/

or:
Installing Sync Package On Linux:
https://help.getsync.com/hc/en-us/articles/206178924

Guide To Linux, And Sync Peculiarities:
https://help.getsync.com/hc/en-us/articles/204762449-Guide-to-Linux

* Xware Desktop迅雷下载
http://www.gebi1.com/thread-240934-1-1.html

http://diary.taskinghouse.com/posts/736252-using-docker-installed-xware-for-synology-dsm-6-with-thunder-remote-download

http://gavinliu.cn/2015/06/18/%E5%9C%A8Ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85Xware%E8%BF%85%E9%9B%B7%E8%BF%9C%E7%A8%8B%E4%B8%8B%E8%BD%BD/

* bcloud 百度云
http://www.gebi1.com/thread-240934-1-1.html
* tagspace
不需要在服务器安装，只需要在手机、台式机、笔记本等终端安装，同时使用
btsync配合可以实现取代evernote等云笔记的功能

* 外网怎么和内网的NAS进行互通
外網穿透是為了能從外網（比如單位、旅行路上）訪問家裡NAS，上傳照片，遠
程下載等。
** DDNS
ngrok

https://xicheng412.github.io/2016/09/27/ngrok-config/

https://aotu.io/notes/2016/02/19/ngrok/


* TODO
* DNS服务器: dnsmasq+dnscrypt[TODO]

http://lixingcong.github.io/2016/05/01/DNSCrypt-with-dnsmasq/

https://blog.phoenixlzx.com/2016/04/27/better-dns-with-unbound/

https://www.dommyet.me/dnsmasq-dnscrypt-smart-dns

* CardDAV、CalDAV服务器(手机通讯录同步) [TODO][fn:2]
+ 安装 sqlite: =sudo apt-get install sqlit3 php5-sqlite=
+ 从baikal 的官方网站下载 baikal-regular
+ 安装baikal: 根据压缩包中的INSTALL.md文档进行安装
+ 记住sqlite3的数据库文件必须放在web服务器无法访问的地方。
+ 手机客户端使用DAVDorid
** HTTPS apache ssl模块安装，baikal使用HTTPS连接
+ 修改 /etc/ssl/openssl.cnf 配置，确认如下设置
  =basicConstraints=CA:TRUE= ，便于做CA自签名证书
+ 生成证书
  #+begin_src sh
    openssl req -x509 -newkey rsa:1024 -keyout /etc/ssl/private/apache.pem -out /etc/ssl/private/apache.pem -nodes -days 999
  #+end_src
+ 修改apache的关于baikal的vhost配置，加入
  #+begin_src sh
    SSLEngine on
    SSLCertificateFile    /etc/ssl/private/apache.pem
  #+end_src
+ 重启apache服务器浏览器中测试https连接。
+ 在浏览器中出现证书为自签名不可信时，将证书输出导入到信任的根证书中。
+ 导出证书给手机客户端使用
  #+begin_src sh
    openssl x509 -in apache.pem -outform DER -out tigerhill.crt
  #+end_src
+ 手机客户端，在 设置>安全>导入证书中将导出的证书导入系统，如成功导入，
  但不显示，则需确认第一步是否将openssl的配置basicConstraints设置为
  CA:TRUE
+ 手机客户端中配置为https开始同步

* cc
#+begin_src sh

#+end_src

* Footnotes

[fn:1] https://www.techforgeek.info/how_to_setup_samba_in_ubuntu_14_04.html

[fn:2] https://www.zhihu.com/question/26509858

[fn:3] http://www.juanjchong.com/2014/setting-up-rtorrentrutorrent-on-ubuntu-14-04-using-ngnix/

[fn:4] http://www.it610.com/article/5421173.htm

