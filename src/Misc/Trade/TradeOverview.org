#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: Trade Overview
#+OPTIONS: num:nil H:2


* General
** syque
http://syque.com/index.htm
** QuantNet
 https://www.quantnet.com/
* Quality Tools
http://syque.com/quality_tools/tools/tools.htm
+ Tools for collecting data
+ Tools for analysing numeric data
+ Tools for understanding qualitative data
+ Tools for analysing and designing processes
+ Tools for understanding process performance
+ Tools for understanding cause and effect
+ Tools for identifying solutions
..

* QuantNet Best-selling Books of 2012
https://www.quantnet.com/threads/quantnet-best-selling-books-of-2012.12190/
+ A Primer for the Mathematics of Financial Engineering, 2nd Ed - Dan Stefanica
+ Solutions, Primer For The Mathematics Of Financial Engineering, 2nd Ed - Dan Stefanica
+ Quant Job Interview Questions And Answers– Mark Joshi
+ Fifty Challenging Problems in Probability with Solutions – Frederick Mosteller
+ The Complete Guide to Capital Markets for Quantitative Professionals
+ My Life as a Quant: Reflections on Physics and Finance – Emanuel Derman
+ Heard on The Street: Quantitative Questions from Wall Street Job Interviews - Timothy Crack
+ Frequently Asked Questions in Quantitative Finance - Paul Wilmott
+ A Practical Guide To Quantitative Finance Interviews – Xinfeng Zhou
+ Liar's Poker - Michael Lewis
+ Cracking the Coding Interview: 150 Programming Questions and Solutions - Gayle Laakmann McDowell
+ How I Became a Quant: Insights from 25 of Wall Street's Elite - Richard R. Lindsey
+ Problem Solving with C++, 8th Edition - Walter Savitch
+ Options, Futures and Other Derivatives (8th Edition) - John Hull
+ Stochastic Calculus for Finance I: The Binomial Asset Pricing Model - Steven Shreve
+ Paul Wilmott on Quantitative Finance 3 Volume Set (2nd Edition) - Paul Wilmott
+ Stochastic Calculus for Finance II: Continuous-Time Models - Steven Shreve
+ Principles of Financial Engineering, 2nd Edition - Salih Neftci
+ C++ Design Patterns and Derivatives Pricing - Mark Joshi
+ C++ Primer Plus - Stephen Prata
+ The Big Short: Inside the Doomsday Machine - Michael Lewis
+ When Genius Failed: The Rise and Fall of Long-Term Capital Management - Roger Lowenstein
+ Starting Your Career as a Wall Street Quant - Brett Jiu
+ Reminiscences of a Stock Operator - Edwin Lefevre
+ The Quants: How a New Breed of Math Whizzes Conquered Wall Street and Nearly Destroyed It - Scott Patterson

* Quant
+ http://www.wonabru.com/index_files/Page572.html
* Prepare
** becoming a quantitative devveloper[fn:2]
*** Programming Skills
If you're targeting bank roles, then you will likely need to be
using C++, Java or C# in a Microsoft/Windows environment. If you are
targeting hedge funds then you will likely be translating MatLab or R
into C++ and/or Python. Funds tend to use Java and C# less, since
they're often in a UNIX environment where C++ and Python make more
sense. 

1. Read through the entirety of [[http://www.amazon.com/gp/product/020170353X/ref=as_li_tf_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=020170353X&linkCode=as2&tag=quant0f-20][Accelerated C++]] by Andrew Koenig. This
   book will get you up to scratch on C++ syntax and, in particular,
   will go into detail about pointers and memory management.
2. Read through (multiple times!) the entirety of [[http://www.amazon.com/gp/product/0321334876/ref=as_li_tf_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0321334876&linkCode=as2&tag=quant0f-20][Effective C++]] by
   Scott Meyers. I've repeated this advice consistently across the
   site, but it still bears saying again. This book will take you from
   a beginner C++ programmer to an intermediate programmer who is
   ready for interview.
3. Scott Meyers has also written [[http://www.amazon.com/gp/product/020163371X/ref=as_li_tf_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=020163371X&linkCode=as2&tag=quant0f-20][More Effective C++]] and [[http://www.amazon.com/gp/product/0201749629/ref=as_li_tf_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0201749629&linkCode=as2&tag=quant0f-20][Effective STL]].
   You will then need to consider the Boost library, multithreaded
   programming and Linux operating system fundamentals to become a
   true expert.
*** Software Engineering
it is now easy to contribute to open source software projects via the
internet. One of the largest quantitative finance projects is the
[[http://quantlib.org/][QuantLib]] project. Reading through (some of) the source code to this
project will give you a good idea at how large-scale C++ software
projects are written.

1. Read through both Steve McConnell's Code Complete and Robert
   Martin's Clean Code. 
2. A discussion on good software craftsmanship would not be complete
   without mentioning Design Patterns, also known as the "Gang Of
   Four" book.
3. here is a free eBook on learning Git, Pro Git, which I suggest you
   work your way through. It will save you hours of wasted development
   time!
4. Some industries are now turning towards continuous integration
   practices, which encourage continuous testing and deployment of
   code via a fully automated testing and deployment system.  Although
   you are likely to be able to pick up most of how a CI system works
   "on the job", you might want to impress your interviewer by
   demonstrating your knowledge of the subject via working through a
   book such as Paul Duvall's [[http://www.amazon.com/gp/product/0321336380/ref=as_li_tf_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0321336380&linkCode=as2&tag=quant0f-20][Continuous Integration]].

*** Database Interaction
Although quant devs are not often database administrators, if you wish
to learn more about advanced MySQL optimisation, then the following
two books, while certainly not necessary, are highly useful if you are
running into database problems: [[http://www.amazon.com/gp/product/1449314287/ref=as_li_tf_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=1449314287&linkCode=as2&tag=quant0f-20][High Performance MySQL]] and [[http://www.amazon.com/gp/product/0596807309/ref=as_li_tf_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0596807309&linkCode=as2&tag=quant0f-20][MySQL High
Availability]].

*** Finance and Numerical Algorithms
Of more relevance are the algorithms used in quantitative finance to
carry out both instrument pricing and algorithmic trading. The
investment bank *derivatives pricing techniques* will almost certainly
concentrate on *Monte Carlo Methods* and *Finite Difference Methods*, both
of which rely on knowledge of *probability, statistics, numerical
analysis and partial differential equations*. These are all topics
which a good student will be familiar with in grad school, but for
those considering a career change, you will need to gain a good
understanding of these methods if you wish to become an options
pricing quant developer in a bank.

or hedge funds, you will likely be implementing trading
infrastructure - either low or high frequency. This will involve
taking an algorithm already coded up in MatLab, R or Python (or even
C++) and then optimising it in a faster language, such as C++, as well
as hooking up this algorithm to a prime brokerage application
programming interface (API) and executing trades. 

In order to read about these topics further, please have a look at my
[[http://www.quantstart.com/articles#cpp-implementation][C++ Implementation articles]], my [[http://www.quantstart.com/articles#python-implementation][Python Implementation articles]] and the
[[http://www.quantstart.com/articles/Quantitative-Finance-Reading-List][Quantitative Finance Reading List]].

** becoming a quantitative analyst[fn:3]
Quantitative analysts and financial engineers spend their time
determining fair prices for derivative products. This involves some
deep mathematical theory including probability, measure theory,
stochastic calculus and partial differential equations. Thus to become
a quant analyst it is necessary to have a strong mathematical
background in mathematics, usually through an undergraduate degree in
mathematics, physics or engineering.

*** The Mathematical Fundamentals
1. For those of you who are unfamiliar with financial markets or the
   derivative products within them, the best place to start is with
   John Hull's Options, Futures, and Other Derivatives.
2. Next up is Mark Joshi's The Concepts and Practice of Mathematical
   Finance, which is pitched at 3rd year undergraduate mathematics
   level.
3. The next book, by Martin Baxter and Andrew Rennie, Financial
   Calculus: An Introduction to Derivative Pricing, can be read
   concurrently. 

If you really want to become an expert at the underlying mathematics,
say for carrying out a top Masters in Financial Engineering (MFE)
program or for beginning a PhD in Mathematical Finance, you will need
to gain a deeper level of mathematical sophistication at stochastic
calculus. Steven Shreve has written a two-volume set, which covers
both the discrete (Stochastic Calculus for Finance I: The Binomial
Asset Pricing Model) and continuous (Stochastic Calculus for Finance
II: Continuous-Time Models) cases. The books are quite involved and
given the limited time with which you may have to study, you may find
them too deep and specific for front office quant job interviews.

If you wish to delve into more mathematical finance books take a look
at the [[http://www.quantstart.com/articles/Quantitative-Finance-Reading-List#mathematical-finance][quantitative finance reading list section on mathematical
finance]].

*** Advanced Mathematical Finance
Advanced mathematical finance really comes down to learning more about
stochastic calculus and risk neutral pricing. These are both extensive
research areas in mathematics. 

1. Mark Joshi's recent More Mathematical Finance essentially continues
   where his other book finishes
2. For deeper explorations of stochastic calculus, it is worth picking
   up Brownian Motion and Stochastic Calculus by Karatzas and Shreve
   as well as Stochastic Differential Equations by Oksendal.
*** Topics (Fixed Income/Credit)
If your research area is geared more towards particular products -
specifically in the fixed income and credit spaces - then the
following books will be of interest.
1. For the modelling of interest rates and term structure, Brigo's
   book Interest Rate Models - Theory and Practice will provide the
   necessary groundwork to begin reading Filipovic's Term-Structure
   Models.
2. If your research area is geared towards credit risk then two
   recommended texts are Credit Risk Pricing Models and Modelling,
   Pricing, and Hedging Counterparty Credit Exposure.
*** Numerical Methods
1. While you won't need to be absolutely familiar with every NLA
   algorithm, a reasonable read-through of Lloyd Trefethen's Numerical
   Linear Algebra will give you a solid grounding on the topic.
   Another seminal work is Numerical Recipes: The Art of Scientific
   Computing, which contains many of the algorithms used by quants
   today, including Monte Carlo techniques, NLA techniques and Fast
   Fourier Transforms. Implementing these methods (the book uses C++)
   will help you understand the process of scientific computing and
   will give you topics to discuss at interview.
2. The best place to get started with basic Monte Carlo is with Mark
   Joshi's C++ Design Patterns and Derivatives Pricing. Once you're
   happy with the quant implementations in Joshi's book, you can
   (optionally) gain a deeper understanding of the state of the art
   Monte Carlo with Paul Glasserman's Monte Carlo Methods in Financial
   Engineering.
3. inite Difference Methods (FDM), while popular a few years back, are
   not quite as important as they once were. Daniel Duffy's Financial
   Instrument Pricing Using C++ provides a great introduction to
   pricing financial derivatives with FDM and goes into extensive
   detail about how to use the STL within financial applications. 

* More Resource [fn:1]
** Archive of Papers
+ Behavioral Finance http://behaviouralfinance.net/ 

** Forums and Public Resources 
+ Tradery http://www.tradery.com/ 
+ JavaTraders http://groups.google.com/group/JavaTraders 
+ InteractiveBrokers.API.Discussion.Forum http://finance.groups.yahoo.com/group/TWSAPI/ 

** Platforms 
**** Commercial 
+ MetaTrader http://www.metaquotes.net/ 
+ RealTick http://www.realtick.com/ 
+ TradeStation http://www.tradestation.co.uk/ 
+ WealthLab http://www.wealth-lab.com/Home/Default.aspx 
+ NinjaTrader http://www.ninjatrader.com/webnew/index.htm 
+ SmartQuant http://www.smartquant.com/ 

**** Open Source / Free 
+ ActiveQuant http://www.activestocks.de/ 
+ EclipseTrader http://www.eclipsetrader.org/ 
+ AIOTrade http://blogtrader.net/page/dcaoyuan/category/AIOTrade 
+ Merchant of Venice http://mov.sourceforge.net/ 
+ Open Java Trading System http://ojts.sourceforge.net/ 
+ TrueTrade http://code.google.com/p/truetrade/ 
+ Artificial Stock Market http://artstkmkt.sourceforge.net/ 
+ iTrade http://itrade.sourceforge.net/ 
+ Matlab Automated Trading Toolbox http://sourceforge.net/projects/mlmechtrade 
+ NexTick http://nextick.sourceforge.net/ 
+ Robotrader http://sourceforge.net/projects/robotrader/ 
+ TickZOOM http://www.tickzoom.org 
+ Marketcetera http://www.marketcetera.com/ 

** DataFeeds 
+ NxCore http://www.nanex.net/ 
+ IQFeed http://www.iqfeed.net/ 
+ ESignal http://www.esignal.com/ 

** Brokerage API 
+ InteractiveBrokers TWS http://www.interactivebrokers.com/e...i&amp;ib_entity=llc 
+ Genesis Securities http://www.gndt.com/automated/download.htm 
+ Trading Technologies http://www.tradingtechnologies.com/ (http://devnet.tradingtechnologies.c...ductCenter.aspx) 
+ FIXopaedia http://b2bits.com/fixopaedia/index.html 
+ Assent Anvil http://www.assent.com/api.php 

** Software 
+ R http://www.r-project.org/ 
+ Octave http://www.gnu.org/software/octave/ 
+ Gretl http://gretl.sourceforge.net/ 
+ Sage http://www.sagemath.org/index.html 
+ Data Visualizer http://dataviews.sourceforge.net/ 
+ Market Analysis System http://eiffel-mas.sourceforge.net/ 
+ Matrex http://matrex.sourceforge.net/ 
+ Scilab http://www.scilab.org/ 
+ jMATLAB http://www.jmatlab.org/index.html 

** Historic Data 
+ Historic Futures Data http://www.anfutures.com/data_es.htm 
+ Historic Commitment of Traders http://www.cftc.gov/marketreports/c...historical.html 
+ Historic Forex Data http://disktrading.is99.com/disktrading/ 
+ Historical Tick Data http://www.tickdata.com/ 

Strategy Discussion 
+ Pairs Trading http://yats.com/doc/cointegration-en.html 

** Software Libraries & Source Code 
*** C/C++ 
+ QuantLib http://quantlib.org/index.shtml 
+ TALib http://ta-lib.org/index.html 
+ GECODE http://www.gecode.org/index.html 
+ Tokyo Cabinet http://tokyocabinet.sourceforge.net/spex-en.html 
+ libmemcached http://tangent.org/552/libmemcached.html 
+ TinyXML++ http://ticpp.googlecode.com/svn/docs/ticpp.html 
+ QuickFIX http://www.quickfixengine.org/ 
+ OpenMP http://openmp.org/wp/ 
+ Gzstream http://www.cs.unc.edu/Research/compgeom/gzstream/ 
+ libevent http://monkey.org/~provos/libevent/doxygen/ 
+ qtstalker http://sourceforge.net/projects/qtstalker/ 
+ Qt Concurrent http://labs.trolltech.com/page/Proj...ds/QtConcurrent 
+ The Phoenix System http://csl.stanford.edu/~christos/sw/phoenix/ 

*** Ruby 
+ EventMachine http://rubyeventmachine.com/ 
+ memcached http://www.deveiate.org/code/Ruby-MemCache/ 
+ Ruby to Erlang http://rubyforge.org/projects/erlectricity/ 
+ SkyNet http://skynet.rubyforge.org/ 

*** Python 
+ Twisted http://twistedmatrix.com/trac/ 
+ Processing http://pypi.python.org/pypi/processing 
+ Stackless http://www.stackless.com/ 
+ twill http://twill.idyll.org/python-api.html 
+ disco http://discoproject.org/ 

**** C# 
mono http://www.mono-project.com/ 
Interactive Brokers C# API http://www.dinosaurtech.com/utilities/ 
QLNet http://www.qlnet.org/ 
ScienceCode http://www.sciencecode.com/ 
RabbitMQ http://www.rabbitmq.com/ 
ZedGraph http://www.zedgraph.org 

**** Java 
Javolution http://javolution.org/ 
RabbitMQ http://www.rabbitmq.com/ 
Java Genetic Algorithms Package http://jgap.sourceforge.net/ 
Java Object Oriented Neural Engine http://www.jooneworld.com/ 
JFree (Charting) http://www.jfree.org/ 
JDOM (XML) http://www.jdom.org/ 
hadoop http://hadoop.apache.org/ 
ObjectPool http://commons.apache.org/pool/ 
Commons-Math http://commons.apache.org/math/ 
Java Caching System http://jakarta.apache.org/jcs/index.html 
EHCache http://ehcache.sourceforge.net/ 
SMACK API for Jabber http://www.igniterealtime.org/projects/smack/index.jsp 
MINA http://mina.apache.org/ 
JBoss Netty 3 http://www.jboss.org/netty 
QuickFix/J http://www.quickfixj.org/ 

*** Matlab 
+ Free Packages http://newsgroups.derkeiler.com/Arc...0/msg00013.html 
+ Matlab Toolboxes http://stommel.tamu.edu/~baum/toolboxes.html 

*** Other 
+ Indicator Formulas http://trader.online.pl/ 
+ Indicator Formulas http://tadoc.org/ 
* SRC
** quantlib
http://quantlib.org/index.shtml
** algoquant
http://numericalmethod.com/blog/algoquant/

https://www.numericalmethod.com:444/svn/algoquant/trunk

* Footnotes

[fn:1] http://www.douban.com/group/topic/47746743/

[fn:2] http://www.quantstart.com/articles/Self-Study-Plan-for-Becoming-a-Quantitative-Developer

[fn:3] http://www.quantstart.com/articles/Self-Study-Plan-for-Becoming-a-Quantitative-Analyst

