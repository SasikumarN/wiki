#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: Tree
#+OPTIONS: num:nil H:2


* Overview
* Independent packages
** John-Mark Gurney’s btree library.
** Jason Evans’ binary search tree libraries
http://t-t-travails.blogspot.hk/2008/07/treaps-versus-red-black-trees.html

+ rb_new: Left-leaning red-black trees.
+ rb_old: Standard red-black trees.
+ RB: Standard red-black trees, as implemented by the *BSD sys/tree.h.
+ trp_hash: Treaps, with priorities computed via pointer hashing.
+ trp_prng: Treaps, with priorities computed via pseudo-random number generation
** GNU libavl
http://adtinfo.org/

implment a two-pointer red-black tree, a three-pointer red-black tree,
an AVL tree and a unbalanced binary search tree
** Niels Provos’ tree library for FreeBSD
 A three-pointer red-black tree and a splay tree.
http://www.freebsd.org/cgi/cvsweb.cgi/src/sys/sys/tree.h
** Thomas Niemann’s red-black tree
http://www.darkridge.com/~jpr5/mirror/alg/node21.html
** sglib_rbtree: from SGLIB
It implements a two-pointer recursive red-black tree (all the other
binary search trees are implemented without recursion).

http://sglib.sourceforge.net/
** kbtree
http://attractivechaos.awardspace.com/kbtree.h.html

** Other AVL resources
http://adtinfo.org/
* compare
** Another Look at my old Benchmark
http://attractivechaos.wordpress.com/2008/10/07/another-look-at-my-old-benchmark/

** Benchmark of Dictionary Structures
http://lh3lh3.users.sourceforge.net/udb.shtml
