#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: Binary Indexed Tree or Fenwick Tree
#+OPTIONS: num:nil H:2


https://en.wikipedia.org/wiki/Fenwick_tree


* The Problem
We have an array arr[0 . . . n-1]. We should be able to[fn:1]
1. Find the sum of first i elements.
2. Change value of a specified element of the array arr[i] = x where 0
   <= i <= n-1.
* The simple solutions
1. run a loop from 0 to i-1 and calculate sum of elements. To update
   a value, simply do arr[i] = x. The first operation takes O(n) time
   and second operation takes O(1) time.
Or:
2.  create another array and store sum from start to i at the i’th
    index in this array. Sum of a given range can now be calculated in
    O(1) time, but update operation takes O(n) time now. This works
    well if the number of query operations are large and very few
    updates.
* Binary Indexed Tree
可以以 $O(\log n)$ 的时间得到任意前缀和
$\sum _{i=1}^{j}a[i],1<=j<=N$ ，并同时支持在 $O(\log n)$ 时间内支持动
态单点值的修改。空间复杂度 $O(n)$ 。







* cc
#+begin_src python

#+end_src

#+begin_src c++

#+end_src


#+begin_src sh

#+end_src

* Footnotes

[fn:1] http://www.geeksforgeeks.org/binary-indexed-tree-or-fenwick-tree-2/

