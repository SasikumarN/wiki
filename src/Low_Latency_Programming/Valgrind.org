#+SETUPFILE: ~/.emacs.d/src/org-templates/level-1.org
#+TITLE: Valgrind
#+OPTIONS: num:nil H:2

* Overview
Valgrind is an instrumentation framework for building dynamic analysis
tools. There are Valgrind tools that can automatically detect many
memory management and threading bugs, and profile your programs in
detail.[fn:1]

+ [[http://valgrind.org/][Homepage]]
+ [[http://www.network-theory.co.uk/valgrind/manual/][Valgrind 3.3 â€” Advanced Debugging and Profiling for GNU/Linux
  applications]]

* Usage
If you don't understand an error message, please consult [[http://valgrind.org/docs/manual/mc-manual.html#mc-manual.errormsgs][Explanation
of error messages from Memcheck]] in the [[http://valgrind.org/docs/manual/manual.html][Valgrind User Manual]] which has
examples of all the error messages Memcheck produces.



** Running your program under Memcheck
#+begin_src sh
 valgrind --leak-check=full myprog arg1 arg2
 valgrind --leak-check=full --log-file="logfile.out" -v myprog arg1
#+end_src
** Analysing memory use with Massif
#+begin_src sh
 valgrind --tool=massif  myprog
#+end_src
Once the execution is finished, Valgrind will generate an output file
called massif.out.XXXX (where XXXX is your process' id) that registers
the memory used by the code at different times, organized by the
object (and line of code) that wrote it. 

massiftool is used to present it in a graphical form, which can be
downloaded from http://sourceforge.net/projects/massiftool/. Note that
massiftool requries version 4.6 or higher of the Qt library.
* Caveats
Memcheck cannot detect every memory error your program has. For
example, it can't detect out-of-range reads or writes to arrays that
are allocated statically or on the stack. But it should detect many
errors that could crash your program (eg. cause a segmentation fault).

Try to make your program so clean that Memcheck reports no errors.
Once you achieve this state, it is much easier to see when changes to
the program cause Memcheck to report new errors. Experience from
several years of Memcheck use shows that it is possible to make even
huge programs run Memcheck-clean. For example, large parts of KDE,
OpenOffice.org and Firefox are Memcheck-clean, or very close to it.





* cc

#+begin_src sh

#+end_src

* Footnotes

[fn:1] http://valgrind.org/

