#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: Qcom IPQ40xx Device Tree Overview
#+OPTIONS: num:nil H:2

* 4 cores of CPU
The device tree allows to describe the layout of CPUs in a system through
the "cpus" node, which in turn contains a number of subnodes (ie "cpu")
defining properties for every cpu.

#+begin_src sh
	cpus {
		#address-cells = <1>;
		#size-cells = <0>;
		cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a7";
			enable-method = "qcom,arm-cortex-acc";
			reg = <0>;
			clocks = <&gcc GCC_APPS_CLK_SRC>;
			clock-frequency = <0>;
		};

		cpu@1 {
			device_type = "cpu";
			compatible = "arm,cortex-a7";
			enable-method = "qcom,arm-cortex-acc";
			reg = <1>;
			clocks = <&gcc GCC_APPS_CLK_SRC>;
			clock-frequency = <0>;
		};

		cpu@2 {
			device_type = "cpu";
			compatible = "arm,cortex-a7";
			enable-method = "qcom,arm-cortex-acc";
			reg = <2>;
			clocks = <&gcc GCC_APPS_CLK_SRC>;
			clock-frequency = <0>;
		};

		cpu@3 {
			device_type = "cpu";
			compatible = "arm,cortex-a7";
			enable-method = "qcom,arm-cortex-acc";
			reg = <3>;
			clocks = <&gcc GCC_APPS_CLK_SRC>;
			clock-frequency = <0>;
		};
	};
#+end_src

+ =arm,cortex-a7=: =Documentation/devicetree/bindings/arm/cpus.txt=
+ =qcom,arm-cortex-acc=:
  =Documentation/devicetree/bindings/arm/msm/acc.txt=
** Application Processor Sub-system (APSS) Application Clock Controller (ACC)
The ACC provides clock, power domain, and reset control to a CPU.
There is one ACC register region per CPU within the APSS remapped
region as well as an alias register region that remaps accesses to the
ACC associated with the CPU accessing the region.

* clocks: sleep clk and xo
#+begin_src sh
	clocks {
		gcc_sleep_clk_src: gcc_sleep_clk_src {
			compatible = "fixed-clock";
			clock-frequency = <32000>;
			#clock-cells = <0>;
		};
		xo: xo {
			compatible = "fixed-clock";
			clock-frequency = <48000000>;
			#clock-cells = <0>;
		};
	};
#+end_src

* all bus definition
=arch/arm/boot/dts/qcom-ipq40xx-bus.dtsi=

* Interrupt Controller
ARM SMP cores are often associated with a GIC, providing per processor
interrupts (PPI), shared processor interrupts (SPI) and software
generated interrupts (SGI).

Primary GIC is attached directly to the CPU and typically has PPIs and SGIs.
Secondary GICs are cascaded into the upward interrupt controller and do not
have PPIs or SGIs.

#+begin_src sh
		intc: interrupt-controller@b000000 {
			compatible = "qcom,msm-qgic2";
			interrupt-controller;
			#interrupt-cells = <3>;
			reg = <0x0b000000 0x1000>,
			<0x0b002000 0x1000>;
		};
#+end_src

+ =qcom,msm-qgic2=: =Documentation/devicetree/bindings/arm/gic.txt=
* QCA Global Counter
=Documentation/devicetree/bindings/clock/qca,gcnt.txt=
#+begin_src sh
		counter {
			compatible = "qcom,qca-gcnt";
			reg = <0x004a1000 0x4>;
		};
#+end_src
* Qualcomm Global Clock & Reset Controller Binding
=Documentation/devicetree/bindings/clock/qcom,gcc.txt=
#+begin_src sh
		gcc: clock-controller@1800000 {
			compatible = "qcom,gcc-ipq40xx";
			#clock-cells = <1>;
			#reset-cells = <1>;
			reg = <0x1800000 0x60000>;
		};
		adcc: clock-controller@7700038 {
			compatible = "qcom,adcc-ipq40xx";
			#clock-cells = <1>;
			#reset-cells = <1>;
			reg = <0x7700038 0x1DC>;
			status = "disabled";
		};
#+end_src
* ARM architected timer
=Documentation/devicetree/bindings/arm/arch_timer.txt=
#+begin_src sh
		timer {
			compatible = "arm,armv7-timer";
			interrupts = <1 2 0xf08>,
				     <1 3 0xf08>,
				     <1 4 0xf08>,
				     <1 1 0xf08>;
			clock-frequency = <48000000>;
		};
#+end_src
* 


* cc
arch/arm/boot/dts/
Documentation/devicetree/bindings/

Documentation/devicetree/bindings/mfd/qcom,tcsr.txt

#+begin_src c++

#+end_src


#+begin_src sh

#+end_src
